name: Terraform Plan

on:
  workflow_call:
    inputs:
      directory:
        description: 'Directory to run Terraform in'
        required: true
        type: string
      terraform_version:
        description: 'Terraform version to use'
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: ${{ inputs.directory }}
    env:
      TF_TOKEN_APP_TERRAFORM_IO: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
      OKTA_ORG_NAME: ${{ secrets.OKTA_ORG_NAME }} 
      OKTA_BASE_URL: ${{ secrets.OKTA_BASE_URL }} 
      OKTA_API_CLIENT_ID: ${{ secrets.OKTA_API_CLIENT_ID }} 
      OKTA_API_PRIVATE_KEY_ID: ${{ secrets.OKTA_API_PRIVATE_KEY_ID }} 
      OKTA_API_PRIVATE_KEY: ${{ secrets.OKTA_API_PRIVATE_KEY }} 
      OKTA_API_SCOPES: ${{ secrets.OKTA_API_SCOPES }} 

    steps:
      - name: Checkout pull request
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version != '' && inputs.terraform_version || null }}

      - name: Initialize Terraform
        run: |
          terraform init -input=false
          terraform fmt -check
          terraform validate -no-color
  
      - name: Run Terraform Plan
        id: terraform_plan
        run: |
          cmd="terraform plan -no-color -input=false"

          start=$(date +%s)
          $cmd
          end=$(date +%s)

          echo "duration=$((end - start))" >> $GITHUB_OUTPUT
          echo "cmd=$cmd" >> $GITHUB_OUTPUT

      - name: Comment Terraform Plan
        uses: actions/github-script@v7
        with: 
          script: |
            var body = `
            **Terraform plan** (${{ inputs.directory }}) ran in ${{ steps.terraform_plan.outputs.duration }} seconds.
            \`\`\`
            ${{ steps.terraform_plan.outputs.cmd }}
            \`\`\`

            #### Diff of changes
            \`\`\`diff
            + # okta_group_rule.staples_organization will be updated in-place
            ! # okta_policy_rule_signon.staples_deny must be replaced
            \`\`\`

            <details>
            <summary>Plan: 1 to add, 1 to change, 1 to destroy.</summary>

            \`\`\`
            ${{ steps.terraform_plan.outputs.stdout }}
            \`\`\`
            </details>
            `

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
    
  # test:
  #   if: ${{ !always() }}
  #   runs-on: ubuntu-latest
  #   needs: run
  #   steps:
  #     - name: Check Terraform Plan Output
  #       run: |
  #         echo "Checking Terraform Plan Output..."
  #         echo "Terraform plan ran in ${{ needs.run.outputs.terraform_time_elapsed }} seconds."
  #         echo "Terraform command: ${{ needs.run.outputs.terraform_cmd }}"
