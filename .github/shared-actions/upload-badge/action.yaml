name: Upload Badge
description: 'Action to create and upload a badge to the repository'

inputs:
  github_token:
    type: string
    description: 'GitHub token for authentication'
    required: true
  label:
    type: string
    description: 'Badge label'
  message:
    type: string
    description: 'Badge message'
    required: true
  labelColor:
    type: string
    description: 'Label color'
  color:
    type: string
    description: 'Message color'
  logoBase64:
    type: string
    description: 'Base64 encoded logo'
  style:
    type: string
    description: 'Badge style'
  filename:
    type: string
    description: 'Name of the file'
    required: true

runs:
  using: composite

  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install dependencies
      shell: bash
      working-directory: ${{github.action_path}}
      run: npm ci

    - name: Create badge
      working-directory: ${{github.action_path}}
      shell: bash
      run: |
          node -e "
          const fs = require('fs');
          const { makeBadge, ValidationError } = require('badge-maker')

          const badgeFile = '${{ inputs.filename }}';
          var format = {
            message: '${{ inputs.message }}',
          }

          if ('${{ inputs.label }}') {
            format.label = '${{ inputs.label }}'
          }

          if ('${{ inputs.labelColor }}') {
            format.labelColor = '${{ inputs.labelColor }}'
          }

          if ('${{ inputs.color }}') {
            format.color = '${{ inputs.color }}'
          }

          if ('${{ inputs.logoBase64 }}') {
            format.logoBase64 = '${{ inputs.logoBase64 }}'
          }

          if ('${{ inputs.style }}') {
            format.style = '${{ inputs.style }}'
          }

          const svg = makeBadge(format)
          fs.writeFileSync(badgeFile, svg);
          
          console.log('Badge created successfully:', badgeFile);
          "

    # Commit badge to badges branch using GitHub API
    - name: Commit badge using GitHub API
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
          # Read the badge file content and encode it as base64
          BADGE_CONTENT=$(base64 -w 0 "${{ inputs.filename }}")
          
          # Get the current SHA of the file if it exists
          CURRENT_SHA=$(gh api repos/${{ github.repository }}/contents/${{ inputs.filename }} \
            --jq '.sha' \
            -H "Accept: application/vnd.github.v3+json" \
            --silent 2>/dev/null || echo "")
          
          # Prepare the API payload
          if [ -n "$CURRENT_SHA" ]; then
            # File exists, update it
            gh api repos/${{ github.repository }}/contents/${{ inputs.filename }} \
              --method PUT \
              --field message="update ${{ inputs.filename }}" \
              --field content="$BADGE_CONTENT" \
              --field branch="badges" \
              --field sha="$CURRENT_SHA"
          else
            # File doesn't exist, create it
            gh api repos/${{ github.repository }}/contents/${{ inputs.filename }} \
              --method PUT \
              --field message="create ${{ inputs.filename }}" \
              --field content="$BADGE_CONTENT" \
              --field branch="badges"
          fi